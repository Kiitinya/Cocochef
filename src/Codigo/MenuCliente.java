/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Codigo;

import java.util.ArrayList;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ASHLE
 */
public class MenuCliente extends javax.swing.JFrame {

    //Archivos
    Nivel cocoChef, enemy;
    ArrayList<Nivel> array_nivel = new ArrayList<Nivel>();
    Archivo_generico<Nivel> arch_nivel = new Archivo_generico("Nivel.ser");

    ArrayList<Nivel> array_nivel_enemigo = new ArrayList<Nivel>();
    Archivo_generico<Nivel> arch_nivel_enemigo = new Archivo_generico("Nivel_enemigo.ser");

    /**
     * Creates new form MenuCliente
     */
    public MenuCliente() {
        initComponents();
        Panel_juego.setVisible(false);
        Panel_menuPrincipal.setVisible(true);
        this.setTitle("Omelett, el coco-chef");
        Button_seguir.setVisible(false);
        label_combate.setVisible(false);
        Button_seguir2.setVisible(false);
        Panel_subirNivel.setVisible(false);
        Panel_gameOver.setVisible(false);
        Button_ataqueDebil.setVisible(false);
        Button_ataqueFuerte.setVisible(false);
        Panel_ganaste.setVisible(false);
        Panel_gameOver.setBounds(0, 0, 0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Panel_menuPrincipal = new javax.swing.JPanel();
        Button_nuevaPartida = new javax.swing.JButton();
        Button_cargarPartida = new javax.swing.JButton();
        Button_salir = new javax.swing.JButton();
        label_ImagenTitulo = new javax.swing.JLabel();
        label_titulo = new javax.swing.JLabel();
        Panel_gameOver = new javax.swing.JPanel();
        label_GameOver = new javax.swing.JLabel();
        Button_volver = new javax.swing.JButton();
        label_llegarNivel = new javax.swing.JLabel();
        Panel_juego = new javax.swing.JPanel();
        Panel_gameplay = new javax.swing.JPanel();
        Panel_subirNivel = new javax.swing.JPanel();
        Button_subirAtaque = new javax.swing.JButton();
        Button_subirDefensa = new javax.swing.JButton();
        Button_subirVida = new javax.swing.JButton();
        label_subisteNivel = new javax.swing.JLabel();
        label_queDeseas = new javax.swing.JLabel();
        label_aumentar = new javax.swing.JLabel();
        label_recuperar = new javax.swing.JLabel();
        Button_recuperarVida = new javax.swing.JButton();
        Panel_estadisticasCocoChef = new javax.swing.JPanel();
        label_exp = new javax.swing.JLabel();
        ProgressBar_exp = new javax.swing.JProgressBar();
        label_vida = new javax.swing.JLabel();
        Barra_vidaOmelett = new javax.swing.JProgressBar();
        label_indicadorVida = new javax.swing.JLabel();
        label_experiencia = new javax.swing.JLabel();
        Panel_vidaEnemigo = new javax.swing.JPanel();
        label_vidaEnemigo = new javax.swing.JLabel();
        Barra_vidaEnemigo = new javax.swing.JProgressBar();
        label_vidaTotalEnemigo = new javax.swing.JLabel();
        Panel_nombreEnemigo = new javax.swing.JPanel();
        label_nombreEnemigo = new javax.swing.JLabel();
        label_enemigo = new javax.swing.JLabel();
        label_cocochef = new javax.swing.JLabel();
        Panel_nombreCocochef = new javax.swing.JPanel();
        label_nombreOmelett = new javax.swing.JLabel();
        label_fondo = new javax.swing.JLabel();
        Panel_menuGameplay = new javax.swing.JPanel();
        label_combate = new javax.swing.JLabel();
        label_combate1 = new javax.swing.JLabel();
        Button_seguir = new javax.swing.JButton();
        Button_seguir2 = new javax.swing.JButton();
        Panel_estadisticas = new javax.swing.JPanel();
        label_ataque = new javax.swing.JLabel();
        label_indicadorAtaque = new javax.swing.JLabel();
        label_defensa = new javax.swing.JLabel();
        label_indicadorDefensa = new javax.swing.JLabel();
        label_nivel = new javax.swing.JLabel();
        label_indicadorNivel = new javax.swing.JLabel();
        Panel_botones = new javax.swing.JPanel();
        Button_atacar = new javax.swing.JButton();
        Button_rendirse = new javax.swing.JButton();
        Button_ataqueDebil = new javax.swing.JButton();
        Button_ataqueFuerte = new javax.swing.JButton();
        Panel_ganaste = new javax.swing.JPanel();
        label_Ganaste = new javax.swing.JLabel();
        label_Maestrococochef = new javax.swing.JLabel();
        Button_volverGanar = new javax.swing.JButton();
        label_fondoGanaste = new javax.swing.JLabel();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1300, 830));
        setResizable(false);

        Panel_menuPrincipal.setBackground(new java.awt.Color(255, 255, 204));
        Panel_menuPrincipal.setPreferredSize(new java.awt.Dimension(1367, 1094));
        Panel_menuPrincipal.setLayout(null);

        Button_nuevaPartida.setBackground(new java.awt.Color(51, 51, 255));
        Button_nuevaPartida.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        Button_nuevaPartida.setForeground(new java.awt.Color(255, 255, 255));
        Button_nuevaPartida.setText("Nueva Partida");
        Button_nuevaPartida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_nuevaPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_nuevaPartidaActionPerformed(evt);
            }
        });
        Panel_menuPrincipal.add(Button_nuevaPartida);
        Button_nuevaPartida.setBounds(440, 440, 555, 72);

        Button_cargarPartida.setBackground(new java.awt.Color(51, 51, 255));
        Button_cargarPartida.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        Button_cargarPartida.setForeground(new java.awt.Color(255, 255, 255));
        Button_cargarPartida.setText("Cargar Partida");
        Button_cargarPartida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_cargarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_cargarPartidaActionPerformed(evt);
            }
        });
        Panel_menuPrincipal.add(Button_cargarPartida);
        Button_cargarPartida.setBounds(440, 540, 555, 72);

        Button_salir.setBackground(new java.awt.Color(51, 51, 255));
        Button_salir.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        Button_salir.setForeground(new java.awt.Color(255, 255, 255));
        Button_salir.setText("Salir");
        Button_salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_salirActionPerformed(evt);
            }
        });
        Panel_menuPrincipal.add(Button_salir);
        Button_salir.setBounds(440, 640, 555, 72);

        label_ImagenTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/titulocochef2.png"))); // NOI18N
        label_ImagenTitulo.setText("jLabel1");
        Panel_menuPrincipal.add(label_ImagenTitulo);
        label_ImagenTitulo.setBounds(330, 30, 660, 410);

        label_titulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondotitulo.jpg"))); // NOI18N
        label_titulo.setText("jLabel1");
        Panel_menuPrincipal.add(label_titulo);
        label_titulo.setBounds(1, -4, 1380, 1100);

        Panel_gameOver.setBackground(new java.awt.Color(51, 51, 51));
        Panel_gameOver.setMinimumSize(new java.awt.Dimension(0, 0));
        Panel_gameOver.setPreferredSize(new java.awt.Dimension(1367, 1094));
        Panel_gameOver.setLayout(null);

        label_GameOver.setFont(new java.awt.Font("Swis721 Blk BT", 0, 100)); // NOI18N
        label_GameOver.setForeground(new java.awt.Color(255, 0, 102));
        label_GameOver.setText("GAME OVER");
        Panel_gameOver.add(label_GameOver);
        label_GameOver.setBounds(380, 120, 654, 121);

        Button_volver.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Button_volver.setText("Volver al men√∫ de inicio");
        Button_volver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_volverActionPerformed(evt);
            }
        });
        Panel_gameOver.add(Button_volver);
        Button_volver.setBounds(490, 490, 432, 111);

        label_llegarNivel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        label_llegarNivel.setForeground(new java.awt.Color(255, 0, 51));
        label_llegarNivel.setText("Llegaste a nivel 1");
        Panel_gameOver.add(label_llegarNivel);
        label_llegarNivel.setBounds(560, 340, 390, 44);

        Panel_juego.setBackground(new java.awt.Color(0, 51, 51));

        Panel_gameplay.setBackground(new java.awt.Color(204, 255, 204));
        Panel_gameplay.setLayout(null);

        Panel_subirNivel.setBackground(new java.awt.Color(255, 255, 102));
        Panel_subirNivel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panel_subirNivel.setToolTipText("");

        Button_subirAtaque.setText("Ataque");
        Button_subirAtaque.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_subirAtaque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_subirAtaqueActionPerformed(evt);
            }
        });

        Button_subirDefensa.setText("Defensa");
        Button_subirDefensa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_subirDefensa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_subirDefensaActionPerformed(evt);
            }
        });

        Button_subirVida.setText("Vida M√°xima");
        Button_subirVida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_subirVida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_subirVidaActionPerformed(evt);
            }
        });

        label_subisteNivel.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        label_subisteNivel.setText("¬°Has subido de nivel!");

        label_queDeseas.setText("¬øQu√© deseas hacer?");

        label_aumentar.setText("Aumentar:");

        label_recuperar.setText("Recuperar:");

        Button_recuperarVida.setText("Vida");
        Button_recuperarVida.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_recuperarVida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_recuperarVidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_subirNivelLayout = new javax.swing.GroupLayout(Panel_subirNivel);
        Panel_subirNivel.setLayout(Panel_subirNivelLayout);
        Panel_subirNivelLayout.setHorizontalGroup(
            Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_subirNivelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_subirNivelLayout.createSequentialGroup()
                        .addComponent(label_recuperar)
                        .addGap(18, 18, 18)
                        .addComponent(Button_recuperarVida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Panel_subirNivelLayout.createSequentialGroup()
                        .addComponent(label_aumentar)
                        .addGap(18, 18, 18)
                        .addComponent(Button_subirAtaque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button_subirDefensa)
                        .addGap(10, 10, 10)
                        .addComponent(Button_subirVida)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_subirNivelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_subirNivelLayout.createSequentialGroup()
                        .addComponent(label_subisteNivel)
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_subirNivelLayout.createSequentialGroup()
                        .addComponent(label_queDeseas)
                        .addGap(130, 130, 130))))
        );
        Panel_subirNivelLayout.setVerticalGroup(
            Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_subirNivelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_subisteNivel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_queDeseas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_subirVida)
                    .addComponent(Button_subirDefensa)
                    .addComponent(Button_subirAtaque)
                    .addComponent(label_aumentar))
                .addGap(18, 18, 18)
                .addGroup(Panel_subirNivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_recuperar)
                    .addComponent(Button_recuperarVida))
                .addGap(26, 26, 26))
        );

        Panel_gameplay.add(Panel_subirNivel);
        Panel_subirNivel.setBounds(410, 40, 395, 180);

        Panel_estadisticasCocoChef.setBackground(new java.awt.Color(0, 153, 0));
        Panel_estadisticasCocoChef.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_estadisticasCocoChef.setLayout(null);

        label_exp.setForeground(new java.awt.Color(255, 255, 255));
        label_exp.setText("Exp:");
        Panel_estadisticasCocoChef.add(label_exp);
        label_exp.setBounds(10, 10, 41, 16);
        Panel_estadisticasCocoChef.add(ProgressBar_exp);
        ProgressBar_exp.setBounds(60, 10, 170, 14);

        label_vida.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        label_vida.setForeground(new java.awt.Color(255, 255, 255));
        label_vida.setText("HP:");
        Panel_estadisticasCocoChef.add(label_vida);
        label_vida.setBounds(10, 40, 40, 30);
        Panel_estadisticasCocoChef.add(Barra_vidaOmelett);
        Barra_vidaOmelett.setBounds(60, 40, 170, 30);

        label_indicadorVida.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_indicadorVida.setForeground(new java.awt.Color(255, 255, 255));
        label_indicadorVida.setText("20/20");
        Panel_estadisticasCocoChef.add(label_indicadorVida);
        label_indicadorVida.setBounds(240, 40, 70, 22);

        label_experiencia.setForeground(new java.awt.Color(255, 255, 255));
        label_experiencia.setText("0/10");
        Panel_estadisticasCocoChef.add(label_experiencia);
        label_experiencia.setBounds(240, 10, 70, 16);

        Panel_gameplay.add(Panel_estadisticasCocoChef);
        Panel_estadisticasCocoChef.setBounds(40, 80, 310, 80);

        Panel_vidaEnemigo.setBackground(new java.awt.Color(0, 153, 0));
        Panel_vidaEnemigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        Panel_vidaEnemigo.setLayout(null);

        label_vidaEnemigo.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        label_vidaEnemigo.setForeground(new java.awt.Color(255, 255, 255));
        label_vidaEnemigo.setText("HP:");
        Panel_vidaEnemigo.add(label_vidaEnemigo);
        label_vidaEnemigo.setBounds(20, 10, 50, 27);
        Panel_vidaEnemigo.add(Barra_vidaEnemigo);
        Barra_vidaEnemigo.setBounds(80, 10, 150, 30);

        label_vidaTotalEnemigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_vidaTotalEnemigo.setForeground(new java.awt.Color(255, 255, 255));
        label_vidaTotalEnemigo.setText("3/3");
        Panel_vidaEnemigo.add(label_vidaTotalEnemigo);
        label_vidaTotalEnemigo.setBounds(240, 10, 70, 22);

        Panel_gameplay.add(Panel_vidaEnemigo);
        Panel_vidaEnemigo.setBounds(860, 90, 320, 50);

        Panel_nombreEnemigo.setBackground(new java.awt.Color(51, 51, 51));
        Panel_nombreEnemigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        label_nombreEnemigo.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        label_nombreEnemigo.setForeground(new java.awt.Color(255, 255, 255));
        label_nombreEnemigo.setText("TomatoCosmo");

        javax.swing.GroupLayout Panel_nombreEnemigoLayout = new javax.swing.GroupLayout(Panel_nombreEnemigo);
        Panel_nombreEnemigo.setLayout(Panel_nombreEnemigoLayout);
        Panel_nombreEnemigoLayout.setHorizontalGroup(
            Panel_nombreEnemigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_nombreEnemigoLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(label_nombreEnemigo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        Panel_nombreEnemigoLayout.setVerticalGroup(
            Panel_nombreEnemigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_nombreEnemigoLayout.createSequentialGroup()
                .addComponent(label_nombreEnemigo)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        Panel_gameplay.add(Panel_nombreEnemigo);
        Panel_nombreEnemigo.setBounds(960, 50, 220, 40);

        label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_tomate_volteado.png"))); // NOI18N
        Panel_gameplay.add(label_enemigo);
        label_enemigo.setBounds(780, 250, 250, 444);

        label_cocochef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cocochef_oficial.png"))); // NOI18N
        Panel_gameplay.add(label_cocochef);
        label_cocochef.setBounds(130, 200, 295, 444);

        Panel_nombreCocochef.setBackground(new java.awt.Color(51, 51, 51));
        Panel_nombreCocochef.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        label_nombreOmelett.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        label_nombreOmelett.setForeground(new java.awt.Color(255, 255, 255));
        label_nombreOmelett.setText("Omelett");

        javax.swing.GroupLayout Panel_nombreCocochefLayout = new javax.swing.GroupLayout(Panel_nombreCocochef);
        Panel_nombreCocochef.setLayout(Panel_nombreCocochefLayout);
        Panel_nombreCocochefLayout.setHorizontalGroup(
            Panel_nombreCocochefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_nombreCocochefLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(label_nombreOmelett, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addContainerGap())
        );
        Panel_nombreCocochefLayout.setVerticalGroup(
            Panel_nombreCocochefLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_nombreCocochefLayout.createSequentialGroup()
                .addComponent(label_nombreOmelett)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        Panel_gameplay.add(Panel_nombreCocochef);
        Panel_nombreCocochef.setBounds(40, 40, 130, 40);

        label_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondito.png"))); // NOI18N
        label_fondo.setText("jLabel1");
        Panel_gameplay.add(label_fondo);
        label_fondo.setBounds(0, 0, 1280, 610);

        Panel_menuGameplay.setBackground(new java.awt.Color(0, 102, 51));

        label_combate.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        label_combate.setForeground(new java.awt.Color(255, 255, 255));
        label_combate.setText("¬°Omelett, el cocochef, ha atacado!");

        label_combate1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        label_combate1.setForeground(new java.awt.Color(255, 255, 255));
        label_combate1.setText("¬°Omelett, el cocochef, ha atacado!");

        Button_seguir.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button_seguir.setText("Seguir");
        Button_seguir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_seguir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_seguirActionPerformed(evt);
            }
        });

        Button_seguir2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button_seguir2.setText("Seguir");
        Button_seguir2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_seguir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_seguir2ActionPerformed(evt);
            }
        });

        Panel_estadisticas.setBackground(new java.awt.Color(51, 204, 0));
        Panel_estadisticas.setLayout(null);

        label_ataque.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        label_ataque.setForeground(new java.awt.Color(255, 255, 255));
        label_ataque.setText("Ataque:");
        Panel_estadisticas.add(label_ataque);
        label_ataque.setBounds(120, 10, 120, 41);

        label_indicadorAtaque.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        label_indicadorAtaque.setForeground(new java.awt.Color(255, 255, 255));
        label_indicadorAtaque.setText("1");
        Panel_estadisticas.add(label_indicadorAtaque);
        label_indicadorAtaque.setBounds(170, 60, 180, 90);

        label_defensa.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        label_defensa.setForeground(new java.awt.Color(255, 255, 255));
        label_defensa.setText("Defensa:");
        Panel_estadisticas.add(label_defensa);
        label_defensa.setBounds(360, 20, 126, 30);

        label_indicadorDefensa.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        label_indicadorDefensa.setForeground(new java.awt.Color(255, 255, 255));
        label_indicadorDefensa.setText("1");
        Panel_estadisticas.add(label_indicadorDefensa);
        label_indicadorDefensa.setBounds(410, 70, 170, 70);

        label_nivel.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        label_nivel.setForeground(new java.awt.Color(255, 255, 255));
        label_nivel.setText("Nivel:");
        Panel_estadisticas.add(label_nivel);
        label_nivel.setBounds(620, 20, 86, 30);

        label_indicadorNivel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        label_indicadorNivel.setForeground(new java.awt.Color(255, 255, 255));
        label_indicadorNivel.setText("1");
        Panel_estadisticas.add(label_indicadorNivel);
        label_indicadorNivel.setBounds(650, 70, 180, 70);

        Panel_botones.setBackground(new java.awt.Color(0, 153, 0));

        Button_atacar.setBackground(new java.awt.Color(204, 255, 204));
        Button_atacar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        Button_atacar.setText("Atacar");
        Button_atacar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_atacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_atacarActionPerformed(evt);
            }
        });

        Button_rendirse.setBackground(new java.awt.Color(204, 255, 204));
        Button_rendirse.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 48)); // NOI18N
        Button_rendirse.setText("Rendirse");
        Button_rendirse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Button_rendirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_rendirseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_botonesLayout = new javax.swing.GroupLayout(Panel_botones);
        Panel_botones.setLayout(Panel_botonesLayout);
        Panel_botonesLayout.setHorizontalGroup(
            Panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_botonesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(Panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Button_rendirse, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_atacar, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        Panel_botonesLayout.setVerticalGroup(
            Panel_botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_atacar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_rendirse, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel_estadisticas.add(Panel_botones);
        Panel_botones.setBounds(830, 0, 450, 190);

        Button_ataqueDebil.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 48)); // NOI18N
        Button_ataqueDebil.setText("Ataque D√©bil");
        Button_ataqueDebil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ataqueDebilActionPerformed(evt);
            }
        });

        Button_ataqueFuerte.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 48)); // NOI18N
        Button_ataqueFuerte.setText("Ataque Fuerte");
        Button_ataqueFuerte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_ataqueFuerteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_menuGameplayLayout = new javax.swing.GroupLayout(Panel_menuGameplay);
        Panel_menuGameplay.setLayout(Panel_menuGameplayLayout);
        Panel_menuGameplayLayout.setHorizontalGroup(
            Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_estadisticas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(Panel_menuGameplayLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_menuGameplayLayout.createSequentialGroup()
                        .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_combate1)
                            .addComponent(label_combate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Button_seguir2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button_seguir, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Panel_menuGameplayLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Button_ataqueDebil, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_ataqueFuerte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(50, 50, 50))
        );
        Panel_menuGameplayLayout.setVerticalGroup(
            Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_menuGameplayLayout.createSequentialGroup()
                .addComponent(Panel_estadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_seguir, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_combate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_seguir2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_combate1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_menuGameplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Button_ataqueDebil, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(Button_ataqueFuerte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Panel_juegoLayout = new javax.swing.GroupLayout(Panel_juego);
        Panel_juego.setLayout(Panel_juegoLayout);
        Panel_juegoLayout.setHorizontalGroup(
            Panel_juegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_juegoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_juegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Panel_gameplay, javax.swing.GroupLayout.DEFAULT_SIZE, 1279, Short.MAX_VALUE)
                    .addComponent(Panel_menuGameplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        Panel_juegoLayout.setVerticalGroup(
            Panel_juegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_juegoLayout.createSequentialGroup()
                .addComponent(Panel_gameplay, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_menuGameplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Panel_ganaste.setBackground(new java.awt.Color(255, 204, 204));
        Panel_ganaste.setPreferredSize(new java.awt.Dimension(1300, 830));
        Panel_ganaste.setLayout(null);

        label_Ganaste.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 70)); // NOI18N
        label_Ganaste.setForeground(new java.awt.Color(255, 255, 255));
        label_Ganaste.setText("¬°Ganaste, muchas felicidades!");
        Panel_ganaste.add(label_Ganaste);
        label_Ganaste.setBounds(247, 71, 791, 77);

        label_Maestrococochef.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 48)); // NOI18N
        label_Maestrococochef.setForeground(new java.awt.Color(255, 255, 255));
        label_Maestrococochef.setText("¬°Omelett se ha vuelto un maestro cocochef, gracias a ti!");
        Panel_ganaste.add(label_Maestrococochef);
        label_Maestrococochef.setBounds(122, 517, 1006, 53);

        Button_volverGanar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Button_volverGanar.setText("Regresar al men√∫ principal");
        Button_volverGanar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_volverGanarActionPerformed(evt);
            }
        });
        Panel_ganaste.add(Button_volverGanar);
        Button_volverGanar.setBounds(122, 635, 1006, 85);

        label_fondoGanaste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/felicidades.jpg"))); // NOI18N
        label_fondoGanaste.setText("jLabel3");
        Panel_ganaste.add(label_fondoGanaste);
        label_fondoGanaste.setBounds(0, -90, 1680, 1160);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel_menuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 1379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Panel_juego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Panel_gameOver, javax.swing.GroupLayout.PREFERRED_SIZE, 1500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Panel_ganaste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel_menuPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Panel_juego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(Panel_gameOver, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Panel_ganaste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_salirActionPerformed
        enviarTCP("7");
        System.exit(0);
    }//GEN-LAST:event_Button_salirActionPerformed

    private void Button_nuevaPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_nuevaPartidaActionPerformed
        Panel_menuPrincipal.setVisible(false);
        Panel_juego.setVisible(true);
        Panel_vidaEnemigo.setVisible(true);
        Panel_nombreEnemigo.setVisible(true);
        Panel_gameOver.setVisible(false);
        Panel_gameplay.setVisible(true);
        Panel_menuGameplay.setVisible(true);
        label_cocochef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cocochef_oficial.png")));
        enviarTCP("8");

        Nivel recibirNivel = nuevoDetallado(cocoChef, array_nivel, arch_nivel, "Omelett", 1, 1, 1, 20, 0, 20, 5);
        estadisticasOmelett(recibirNivel);

        recibirNivel = nuevoDetallado(enemy, array_nivel_enemigo, arch_nivel_enemigo, "TomatoCosmo", 1, 1, 0, 2, 0, 2, 10);
        barraVidaEnemigo(recibirNivel);
        for (Nivel enemy : array_nivel_enemigo) {
            label_nombreEnemigo.setText(enemy.getNombre());
        }
        label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_tomate_volteado.png")));
    }//GEN-LAST:event_Button_nuevaPartidaActionPerformed

    private void Button_rendirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_rendirseActionPerformed
        Panel_menuPrincipal.setVisible(true);
        Panel_juego.setVisible(false);
    }//GEN-LAST:event_Button_rendirseActionPerformed

    private void Button_cargarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_cargarPartidaActionPerformed
        enviarTCP("9");

        if (array_nivel == null) {
            System.out.println("No hay partidas");
        } else {
            array_nivel = arch_nivel.leerRegistros();
            for (Nivel t : array_nivel) {
                estadisticasOmelett(t);
                if (t.getVida() <= 0) {
                    Panel_gameOver.setVisible(true);
                    Panel_juego.setVisible(false);
                    Panel_gameOver.setBounds(0, 0, 0, 0);
                    label_llegarNivel.setText("Llegaste al nivel " + t.getNivel());
                    Panel_menuPrincipal.setVisible(false);
                } else {
                    array_nivel_enemigo = arch_nivel_enemigo.leerRegistros();
                    for (Nivel enemy : array_nivel_enemigo) {
                        barraVidaEnemigo(enemy);
                        Panel_nombreEnemigo.setVisible(true);
                        label_nombreEnemigo.setText(enemy.getNombre());
                        if (enemy.getVida() <= 0) {
                            enemigoMuere();
                        }

                    }
                    Panel_menuPrincipal.setVisible(false);
                    Panel_juego.setVisible(true);
                }
                if (t.getNivel() >= 50) {

                    Panel_ganaste.setVisible(true);
                    Panel_juego.setVisible(false);
                    Panel_ganaste.setBounds(0, 0, 0, 0);
                }
            }
        }
    }//GEN-LAST:event_Button_cargarPartidaActionPerformed

    private void Button_subirAtaqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_subirAtaqueActionPerformed
        array_nivel = arch_nivel.leerRegistros();

        for (Nivel t : array_nivel) {
            t.setAtaque(t.getAtaque() + 1);
            subirNivel(t);
        }
    }//GEN-LAST:event_Button_subirAtaqueActionPerformed

    private void Button_subirDefensaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_subirDefensaActionPerformed
        array_nivel = arch_nivel.leerRegistros();

        for (Nivel t : array_nivel) {
            t.setDefensa(t.getDefensa() + 1);
            subirNivel(t);
        }
    }//GEN-LAST:event_Button_subirDefensaActionPerformed

    private void Button_subirVidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_subirVidaActionPerformed
        array_nivel = arch_nivel.leerRegistros();

        for (Nivel t : array_nivel) {
            t.setVida_max(t.getVida_max() + 10);
            subirNivel(t);
        }
    }//GEN-LAST:event_Button_subirVidaActionPerformed

    private void Button_atacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_atacarActionPerformed
        Panel_botones.setVisible(false);
        Panel_estadisticas.setVisible(false);
        Button_ataqueDebil.setVisible(true);
        Button_ataqueFuerte.setVisible(true);
        label_combate.setVisible(false);
        label_combate1.setVisible(false);
    }//GEN-LAST:event_Button_atacarActionPerformed

    private void Button_recuperarVidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_recuperarVidaActionPerformed
        array_nivel = arch_nivel.leerRegistros();

        for (Nivel t : array_nivel) {
            if (t.getVida() == t.getVida_max()) {
                System.out.println("Ya tienes la vida llena");
            } else {
                t.setVida(t.getVida_max());
                subirNivel(t);
            }
        }
    }//GEN-LAST:event_Button_recuperarVidaActionPerformed

    private void Button_seguirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_seguirActionPerformed
        Button_seguir.setVisible(false);
        Button_seguir2.setVisible(true);
        label_combate1.setVisible(true);
        label_combate.setVisible(false);
        try {
            if (label_combate.getText().equalsIgnoreCase("¬°Omelett, el cocochef, ha atacado!") || label_combate.getText().equalsIgnoreCase("¬°El ataque de Omelett, ha fallado!")) {
                enviarTCP("14");
            } else {
                enviarTCP("15");
            }
            label_cocochef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cocochef_oficial.png")));
            int z = Protocolo.RecibirTCP(3000);
            
            if (z == 100) {
                int v = Protocolo.RecibirTCP(3000);

                for (Nivel t : array_nivel) {
                    for (Nivel enemy : array_nivel_enemigo) {

                        if (enemy.getNombre().equalsIgnoreCase("TomatoCosmo")) {
                            label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_tomate_enojado.png")));
                        } else {
                            label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_zanahoria_enojada.png")));
                        }
                        int ataque = (v * enemy.getAtaque()) - t.getDefensa();
                        if (ataque <= 0) {
                            ataque = 1;
                            t.setVida(t.getVida() - ataque);
                        } else {
                            t.setVida(t.getVida() - ataque);
                        }

                        actualizar(t, array_nivel, arch_nivel);
                        estadisticasOmelett(t);
                        if (t.getVida() > t.getVida_max()) {
                            t.setVida(t.getVida_max());
                            estadisticasOmelett(t);
                            actualizar(t, array_nivel, arch_nivel);
                        }
                        if (ataque >= 1) {
                            label_combate1.setText("¬°" + enemy.getNombre() + " ha atacado, y ha hecho " + ataque + " de da√±o a Omelett!");
                            if (t.getVida() <= 0) {
                                if (t.getVida() < 0) {
                                    t.setVida(0);
                                    actualizar(t, array_nivel, arch_nivel);
                                    estadisticasOmelett(t);
                                }
                                label_combate1.setText("¬°Omelett ha sido derrotado!");
                                label_cocochef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CocochefDerrotado.png")));
                            }
                        }
                    }
                }
            } else {
                label_combate1.setText("¬°Ha aparecido un nuevo enemigo!");

                enviarTCP("17");
                int generadorEnemigo = Protocolo.RecibirTCP(3000);

                if (generadorEnemigo == 1) {
                    Nivel recibirNivel = nuevoDetallado(enemy, array_nivel_enemigo, arch_nivel_enemigo, "TomatoCosmo", 1, 1, 0, 4, 0, 4, 10);
                    label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_tomate_volteado.png")));
                    generadorEnemigo(recibirNivel);
                } else {
                    Nivel recibirNivel = nuevoDetallado(enemy, array_nivel_enemigo, arch_nivel_enemigo, "ChikiZanahoria", 1, 2, 0, 5, 0, 5, 10);
                    label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_zanahoria.png")));
                    generadorEnemigo(recibirNivel);
                }
                for (Nivel t : array_nivel) {
                    for (Nivel enemy : array_nivel_enemigo) {
                        label_nombreEnemigo.setText(enemy.getNombre());

                        if (t.getNivel() > 1 && t.getNivel() < 6) {
                            SubirNivelEnemigo(enemy, array_nivel_enemigo, arch_nivel_enemigo, 0, 0);
                        } else if (t.getNivel() > 10 && t.getNivel() < 21) {
                            SubirNivelEnemigo(enemy, array_nivel_enemigo, arch_nivel_enemigo, 1, 5);
                        } else if (t.getNivel() > 20 && t.getNivel() < 31) {
                            SubirNivelEnemigo(enemy, array_nivel_enemigo, arch_nivel_enemigo, 2, 11);
                        } else if (t.getNivel() > 30 && t.getNivel() < 41) {
                            SubirNivelEnemigo(enemy, array_nivel_enemigo, arch_nivel_enemigo, 3, 18);
                        } else if (t.getNivel() > 40 && t.getNivel() < 50) {
                            SubirNivelEnemigo(enemy, array_nivel_enemigo, arch_nivel_enemigo, 4, 20);
                        } else if (t.getNivel() >= 50) {
                            Panel_ganaste.setVisible(true);
                            Panel_juego.setVisible(false);
                            Panel_ganaste.setBounds(0, 0, 0, 0);
                        }

                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Button_seguirActionPerformed

    private void Button_seguir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_seguir2ActionPerformed
        Button_seguir2.setVisible(false);
        Panel_botones.setVisible(true);
        Panel_estadisticas.setVisible(true);
        label_combate.setVisible(false);
        enviarTCP("16");

        array_nivel_enemigo = arch_nivel_enemigo.leerRegistros();

        for (Nivel enemigo : array_nivel_enemigo) {
            if (enemigo.getNombre().equalsIgnoreCase("TomatoCosmo")) {
                label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_tomate_volteado.png")));
            } else {
                label_enemigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Enemigo_zanahoria.png")));
            }
        }

        for (Nivel t : array_nivel) {
            if (t.getVida() <= 0) {
                Panel_gameOver.setVisible(true);
                Panel_juego.setVisible(false);
                label_llegarNivel.setText("Llegaste al nivel " + t.getNivel());
            } else {
                if (t.getExp() == t.getExp_max()) {
                    Panel_subirNivel.setVisible(true);
                    Button_atacar.setEnabled(false);
                    Button_rendirse.setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_Button_seguir2ActionPerformed

    private void Button_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_volverActionPerformed
        Panel_gameOver.setVisible(false);
        Panel_menuPrincipal.setVisible(true);
    }//GEN-LAST:event_Button_volverActionPerformed

    private void Button_ataqueDebilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ataqueDebilActionPerformed
        atacar(1, "12");
    }//GEN-LAST:event_Button_ataqueDebilActionPerformed

    private void Button_ataqueFuerteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_ataqueFuerteActionPerformed
        atacar(2, "13");
    }//GEN-LAST:event_Button_ataqueFuerteActionPerformed

    private void Button_volverGanarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_volverGanarActionPerformed
        Panel_ganaste.setVisible(false);
        Panel_menuPrincipal.setVisible(true);
    }//GEN-LAST:event_Button_volverGanarActionPerformed
    public void estadisticasOmelett(Nivel t) {
        label_indicadorNivel.setText(t.getNivel() + "");
        label_indicadorAtaque.setText(t.getAtaque() + "");
        label_indicadorDefensa.setText(t.getDefensa() + "");
        label_indicadorVida.setText(t.getVida() + "/" + t.getVida_max());
        label_experiencia.setText(t.getExp() + "/" + t.getExp_max());
        Barra_vidaOmelett.setMaximum(t.getVida_max());
        Barra_vidaOmelett.setValue(t.getVida());
        ProgressBar_exp.setValue(t.getExp());
        ProgressBar_exp.setMaximum(t.getExp_max());
    }

    public void actualizar(Nivel t, ArrayList<Nivel> array, Archivo_generico<Nivel> arch) {
        t = new Nivel(t.getNombre(), t.getNivel(), t.getAtaque(), t.getDefensa(), t.getVida(), t.getExp(), t.getVida_max(), t.getExp_max());
        array.clear();
        array.add(t);
        arch.actualizarRegistros(array);
    }

    public Nivel nuevoDetallado(Nivel t, ArrayList<Nivel> array, Archivo_generico<Nivel> arch, String nombre, int nivel, int ataque, int defensa, int vida, int exp, int vida_max, int exp_max) {
        arch.nuevoArchivo();
        array.clear();
        t = new Nivel(nombre, nivel, ataque, defensa, vida, exp, vida_max, exp_max);
        array.add(t);
        arch.actualizarRegistros(array);
        return t;
    }

    public void subirNivel(Nivel t) {
        t.setNivel(t.getNivel() + 1);
        t.setExp(0);
        if (t.getNivel() >= 4) {
            t.setExp_max(20);
        } else {
            t.setExp_max(t.getExp_max() + 5);
        }
        actualizar(t, array_nivel, arch_nivel);
        estadisticasOmelett(t);
        Panel_subirNivel.setVisible(false);
        Button_atacar.setEnabled(true);
        Button_rendirse.setEnabled(true);
    }

    public void barraVidaEnemigo(Nivel enemy) {
        Barra_vidaEnemigo.setMaximum(enemy.getVida_max());
        Barra_vidaEnemigo.setValue(enemy.getVida());
        label_vidaTotalEnemigo.setText(enemy.getVida() + "/" + enemy.getVida_max());
    }

    public void enviarTCP(String numero) {
        try {
            Protocolo.EnviarTCP(numero, 2000);
        } catch (IOException e) {
            System.out.println("Bai3");
        }
    }

    public void enemigoMuere() {
        label_enemigo.setIcon(null);
        Panel_vidaEnemigo.setVisible(false);
        Panel_nombreEnemigo.setVisible(false);
    }

    public void generadorEnemigo(Nivel recibirNivel) {
        barraVidaEnemigo(recibirNivel);
        Panel_nombreEnemigo.setVisible(true);
        Panel_vidaEnemigo.setVisible(true);
        for (Nivel enemy : array_nivel_enemigo) {
            label_nombreEnemigo.setText(enemy.getNombre());
        }
    }

    public void atacar(int fuerza, String TCP) {
        array_nivel = arch_nivel.leerRegistros();
        array_nivel_enemigo = arch_nivel_enemigo.leerRegistros();
        label_combate1.setVisible(false);
        label_combate.setVisible(true);
        int v = 0;
        enviarTCP(TCP);
        try {
            int probabilidad = Protocolo.RecibirTCP(3000);
            int ataque = 0;
            label_cocochef.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CocochefAnimado.png")));
            for (Nivel t : array_nivel) {
                ataque = (t.getAtaque() * fuerza);
            }

            for (Nivel enemy : array_nivel_enemigo) {
                if (enemy.getVida() <= 0) {
                    label_combate.setText("¬°El enemigo ya hab√≠a sido derrotado!");
                } else {
                    if (probabilidad == 1 || probabilidad == 2) {
                        enemy.setVida(enemy.getVida() - ataque);
                        barraVidaEnemigo(enemy);
                        actualizar(enemy, array_nivel_enemigo, arch_nivel_enemigo);

                        if (enemy.getVida() <= 0) {
                            enemigoMuere();
                            label_combate.setText("¬°El enemigo ha sido derrotado!");
                            for (Nivel t : array_nivel) {
                                t.setExp(t.getExp() + 5);
                                estadisticasOmelett(t);
                                actualizar(t, array_nivel, arch_nivel);
                            }
                        } else {
                            label_combate.setText("¬°Omelett, el cocochef, ha atacado!");
                        }
                    } else {
                        label_combate.setText("¬°El ataque de Omelett, ha fallado!");
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(MenuCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        Panel_botones.setVisible(false);
        Panel_estadisticas.setVisible(false);
        Button_seguir.setVisible(true);
        label_combate.setVisible(true);
        Button_ataqueDebil.setVisible(false);
        Button_ataqueFuerte.setVisible(false);
    }

    public void SubirNivelEnemigo(Nivel enemy, ArrayList<Nivel> array_nivel_enemigo, Archivo_generico<Nivel> arch_nivel_enemigo, int ataque, int vida) {
        enemy.setAtaque(enemy.getAtaque() + ataque);
        enemy.setVida_max(enemy.getVida_max() + vida);
        enemy.setVida(enemy.getVida() + vida);
        actualizar(enemy, array_nivel_enemigo, arch_nivel_enemigo);
        barraVidaEnemigo(enemy);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Barra_vidaEnemigo;
    private javax.swing.JProgressBar Barra_vidaOmelett;
    private javax.swing.JButton Button_atacar;
    private javax.swing.JButton Button_ataqueDebil;
    private javax.swing.JButton Button_ataqueFuerte;
    private javax.swing.JButton Button_cargarPartida;
    private javax.swing.JButton Button_nuevaPartida;
    private javax.swing.JButton Button_recuperarVida;
    private javax.swing.JButton Button_rendirse;
    private javax.swing.JButton Button_salir;
    private javax.swing.JButton Button_seguir;
    private javax.swing.JButton Button_seguir2;
    private javax.swing.JButton Button_subirAtaque;
    private javax.swing.JButton Button_subirDefensa;
    private javax.swing.JButton Button_subirVida;
    private javax.swing.JButton Button_volver;
    private javax.swing.JButton Button_volverGanar;
    private javax.swing.JPanel Panel_botones;
    private javax.swing.JPanel Panel_estadisticas;
    private javax.swing.JPanel Panel_estadisticasCocoChef;
    private javax.swing.JPanel Panel_gameOver;
    private javax.swing.JPanel Panel_gameplay;
    private javax.swing.JPanel Panel_ganaste;
    private javax.swing.JPanel Panel_juego;
    private javax.swing.JPanel Panel_menuGameplay;
    private javax.swing.JPanel Panel_menuPrincipal;
    private javax.swing.JPanel Panel_nombreCocochef;
    private javax.swing.JPanel Panel_nombreEnemigo;
    private javax.swing.JPanel Panel_subirNivel;
    private javax.swing.JPanel Panel_vidaEnemigo;
    private javax.swing.JProgressBar ProgressBar_exp;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel label_GameOver;
    private javax.swing.JLabel label_Ganaste;
    private javax.swing.JLabel label_ImagenTitulo;
    private javax.swing.JLabel label_Maestrococochef;
    private javax.swing.JLabel label_ataque;
    private javax.swing.JLabel label_aumentar;
    private javax.swing.JLabel label_cocochef;
    private javax.swing.JLabel label_combate;
    private javax.swing.JLabel label_combate1;
    private javax.swing.JLabel label_defensa;
    private javax.swing.JLabel label_enemigo;
    private javax.swing.JLabel label_exp;
    private javax.swing.JLabel label_experiencia;
    private javax.swing.JLabel label_fondo;
    private javax.swing.JLabel label_fondoGanaste;
    private javax.swing.JLabel label_indicadorAtaque;
    private javax.swing.JLabel label_indicadorDefensa;
    private javax.swing.JLabel label_indicadorNivel;
    private javax.swing.JLabel label_indicadorVida;
    private javax.swing.JLabel label_llegarNivel;
    private javax.swing.JLabel label_nivel;
    private javax.swing.JLabel label_nombreEnemigo;
    private javax.swing.JLabel label_nombreOmelett;
    private javax.swing.JLabel label_queDeseas;
    private javax.swing.JLabel label_recuperar;
    private javax.swing.JLabel label_subisteNivel;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JLabel label_vida;
    private javax.swing.JLabel label_vidaEnemigo;
    private javax.swing.JLabel label_vidaTotalEnemigo;
    // End of variables declaration//GEN-END:variables

}
